// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SharedMomentsBackend.App.DB;

#nullable disable

namespace SharedMomentsBackend.App.DB.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240924131427_user_friends_accepted_flag")]
    partial class user_friends_accepted_flag
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Album", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.AlbumUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlbumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("UserId");

                    b.ToTable("AlbumUsers");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Moment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AlbumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Moments");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.MomentResource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MomentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MomentId");

                    b.HasIndex("ResourceId");

                    b.ToTable("MomentResources");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.MomentUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MomentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MomentId");

                    b.HasIndex("UserId");

                    b.ToTable("MomentUsers");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Size")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Action", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Actions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9dbd3419-2a6e-4e3d-aa35-1767af7004e9"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(3982),
                            IsActive = true,
                            Name = "Create",
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(3982)
                        },
                        new
                        {
                            Id = new Guid("c58b3e39-8a67-4ecc-b74c-235eb77914bd"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(3983),
                            IsActive = true,
                            Name = "Read",
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(3984)
                        },
                        new
                        {
                            Id = new Guid("72928ddb-a5fa-4eaa-aecf-093e29da5465"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(3985),
                            IsActive = true,
                            Name = "Update",
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(3985)
                        },
                        new
                        {
                            Id = new Guid("67257b12-7828-4629-8ee3-f2757469c450"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(3986),
                            IsActive = true,
                            Name = "Delete",
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(3986)
                        },
                        new
                        {
                            Id = new Guid("02c702d2-3c57-4325-9dcb-b5b7ec44ad65"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(3990),
                            IsActive = true,
                            Name = "ChangeStatus",
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(3991)
                        });
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Module", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Modules");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9d2a6b03-3f98-42d5-b980-6fc93340f9d1"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(3951),
                            IsActive = true,
                            Name = "Users",
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(3951)
                        },
                        new
                        {
                            Id = new Guid("745936be-c608-42d4-8950-9986d587a965"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(3954),
                            IsActive = true,
                            Name = "Moments",
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(3955)
                        },
                        new
                        {
                            Id = new Guid("533c8997-41d4-48a6-8689-1e83faff1754"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(3956),
                            IsActive = true,
                            Name = "Albums",
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(3956)
                        },
                        new
                        {
                            Id = new Guid("b5b12ef3-3877-4960-9802-1bdea1558d63"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(3957),
                            IsActive = true,
                            Name = "Resources",
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(3958)
                        });
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.ModuleAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("ModuleId");

                    b.ToTable("ModuleActions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bf2a2137-f276-4895-b265-35e102fc4843"),
                            ActionId = new Guid("9dbd3419-2a6e-4e3d-aa35-1767af7004e9"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4013),
                            IsActive = true,
                            ModuleId = new Guid("9d2a6b03-3f98-42d5-b980-6fc93340f9d1"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4014)
                        },
                        new
                        {
                            Id = new Guid("492b84a9-1a1d-49db-994c-c1d6823a9239"),
                            ActionId = new Guid("c58b3e39-8a67-4ecc-b74c-235eb77914bd"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4018),
                            IsActive = true,
                            ModuleId = new Guid("9d2a6b03-3f98-42d5-b980-6fc93340f9d1"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4019)
                        },
                        new
                        {
                            Id = new Guid("0b38533e-bd77-4dbb-ac3c-fb60e9c96737"),
                            ActionId = new Guid("72928ddb-a5fa-4eaa-aecf-093e29da5465"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4020),
                            IsActive = true,
                            ModuleId = new Guid("9d2a6b03-3f98-42d5-b980-6fc93340f9d1"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4020)
                        },
                        new
                        {
                            Id = new Guid("60588be8-b18e-4d43-8f8a-f59fee0d5c9a"),
                            ActionId = new Guid("67257b12-7828-4629-8ee3-f2757469c450"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4021),
                            IsActive = true,
                            ModuleId = new Guid("9d2a6b03-3f98-42d5-b980-6fc93340f9d1"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4021)
                        },
                        new
                        {
                            Id = new Guid("5ff14bb6-10b6-41fe-9f70-2333d115bdd8"),
                            ActionId = new Guid("02c702d2-3c57-4325-9dcb-b5b7ec44ad65"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4022),
                            IsActive = true,
                            ModuleId = new Guid("9d2a6b03-3f98-42d5-b980-6fc93340f9d1"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4022)
                        },
                        new
                        {
                            Id = new Guid("465be5e6-59a7-4c0f-bcfa-5786573112b0"),
                            ActionId = new Guid("9dbd3419-2a6e-4e3d-aa35-1767af7004e9"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4024),
                            IsActive = true,
                            ModuleId = new Guid("745936be-c608-42d4-8950-9986d587a965"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4024)
                        },
                        new
                        {
                            Id = new Guid("9707e1cd-0f54-4fc6-b1a3-19c48f8ea764"),
                            ActionId = new Guid("c58b3e39-8a67-4ecc-b74c-235eb77914bd"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4027),
                            IsActive = true,
                            ModuleId = new Guid("745936be-c608-42d4-8950-9986d587a965"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4027)
                        },
                        new
                        {
                            Id = new Guid("18b3f1b9-49a5-4f2d-9b97-61d0af6ae28b"),
                            ActionId = new Guid("72928ddb-a5fa-4eaa-aecf-093e29da5465"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4028),
                            IsActive = true,
                            ModuleId = new Guid("745936be-c608-42d4-8950-9986d587a965"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4028)
                        },
                        new
                        {
                            Id = new Guid("a873a5d9-2cca-4811-a885-c5c52f32930c"),
                            ActionId = new Guid("67257b12-7828-4629-8ee3-f2757469c450"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4029),
                            IsActive = true,
                            ModuleId = new Guid("745936be-c608-42d4-8950-9986d587a965"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4029)
                        },
                        new
                        {
                            Id = new Guid("803e67df-264a-4339-8188-655a396a637e"),
                            ActionId = new Guid("02c702d2-3c57-4325-9dcb-b5b7ec44ad65"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4084),
                            IsActive = true,
                            ModuleId = new Guid("745936be-c608-42d4-8950-9986d587a965"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4085)
                        },
                        new
                        {
                            Id = new Guid("1d33b040-3353-4eeb-9ce1-c0e8bd8f49da"),
                            ActionId = new Guid("9dbd3419-2a6e-4e3d-aa35-1767af7004e9"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4086),
                            IsActive = true,
                            ModuleId = new Guid("533c8997-41d4-48a6-8689-1e83faff1754"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4086)
                        },
                        new
                        {
                            Id = new Guid("2e7a1420-0397-4c15-88bc-3c0ffb034251"),
                            ActionId = new Guid("c58b3e39-8a67-4ecc-b74c-235eb77914bd"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4087),
                            IsActive = true,
                            ModuleId = new Guid("533c8997-41d4-48a6-8689-1e83faff1754"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4088)
                        },
                        new
                        {
                            Id = new Guid("026e07e3-2597-49d7-9525-e57fee403120"),
                            ActionId = new Guid("72928ddb-a5fa-4eaa-aecf-093e29da5465"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4089),
                            IsActive = true,
                            ModuleId = new Guid("533c8997-41d4-48a6-8689-1e83faff1754"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4089)
                        },
                        new
                        {
                            Id = new Guid("0a014fab-cb43-4f36-ad3f-3c7efb0b57ac"),
                            ActionId = new Guid("67257b12-7828-4629-8ee3-f2757469c450"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4089),
                            IsActive = true,
                            ModuleId = new Guid("533c8997-41d4-48a6-8689-1e83faff1754"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4090)
                        },
                        new
                        {
                            Id = new Guid("f3d31352-0e5e-47be-ac61-575a8b67eed2"),
                            ActionId = new Guid("02c702d2-3c57-4325-9dcb-b5b7ec44ad65"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4092),
                            IsActive = true,
                            ModuleId = new Guid("533c8997-41d4-48a6-8689-1e83faff1754"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4092)
                        },
                        new
                        {
                            Id = new Guid("0a1c7340-c811-4279-a010-caaacdf88a34"),
                            ActionId = new Guid("9dbd3419-2a6e-4e3d-aa35-1767af7004e9"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4093),
                            IsActive = true,
                            ModuleId = new Guid("b5b12ef3-3877-4960-9802-1bdea1558d63"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4093)
                        },
                        new
                        {
                            Id = new Guid("d3299a5e-aeae-44e5-96d1-1c7b15e92ede"),
                            ActionId = new Guid("c58b3e39-8a67-4ecc-b74c-235eb77914bd"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4094),
                            IsActive = true,
                            ModuleId = new Guid("b5b12ef3-3877-4960-9802-1bdea1558d63"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4094)
                        },
                        new
                        {
                            Id = new Guid("e5459fbc-71cf-44d2-88b0-1e9e3866662f"),
                            ActionId = new Guid("72928ddb-a5fa-4eaa-aecf-093e29da5465"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4096),
                            IsActive = true,
                            ModuleId = new Guid("b5b12ef3-3877-4960-9802-1bdea1558d63"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4096)
                        },
                        new
                        {
                            Id = new Guid("9516146b-3072-4a13-934e-d7dc26b6f04e"),
                            ActionId = new Guid("67257b12-7828-4629-8ee3-f2757469c450"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4097),
                            IsActive = true,
                            ModuleId = new Guid("b5b12ef3-3877-4960-9802-1bdea1558d63"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4097)
                        },
                        new
                        {
                            Id = new Guid("5343eaf8-28ec-437a-91f1-4f64a8054a4d"),
                            ActionId = new Guid("02c702d2-3c57-4325-9dcb-b5b7ec44ad65"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4097),
                            IsActive = true,
                            ModuleId = new Guid("b5b12ef3-3877-4960-9802-1bdea1558d63"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4098)
                        });
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModuleActionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ModuleActionId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d7ab27ad-3685-4a71-a052-baec97b3d29e"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4152),
                            IsActive = true,
                            ModuleActionId = new Guid("bf2a2137-f276-4895-b265-35e102fc4843"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4152)
                        },
                        new
                        {
                            Id = new Guid("b7321a31-7f5a-4ef1-b5c5-932bde94dfc1"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4155),
                            IsActive = true,
                            ModuleActionId = new Guid("492b84a9-1a1d-49db-994c-c1d6823a9239"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4155)
                        },
                        new
                        {
                            Id = new Guid("0c514eb6-6455-4717-8991-6c8408ba865c"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4156),
                            IsActive = true,
                            ModuleActionId = new Guid("0b38533e-bd77-4dbb-ac3c-fb60e9c96737"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4156)
                        },
                        new
                        {
                            Id = new Guid("50a33715-2873-4c3c-b3f6-1f016d152caa"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4159),
                            IsActive = true,
                            ModuleActionId = new Guid("60588be8-b18e-4d43-8f8a-f59fee0d5c9a"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4159)
                        },
                        new
                        {
                            Id = new Guid("a0554695-4366-4f69-a37a-3db53cfcf15f"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4160),
                            IsActive = true,
                            ModuleActionId = new Guid("5ff14bb6-10b6-41fe-9f70-2333d115bdd8"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4160)
                        },
                        new
                        {
                            Id = new Guid("01918278-8f94-4363-960f-1bba50581b88"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4161),
                            IsActive = true,
                            ModuleActionId = new Guid("465be5e6-59a7-4c0f-bcfa-5786573112b0"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4161)
                        },
                        new
                        {
                            Id = new Guid("d60fbdf7-7eef-4dbe-b501-1f9e1a9c3804"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4162),
                            IsActive = true,
                            ModuleActionId = new Guid("9707e1cd-0f54-4fc6-b1a3-19c48f8ea764"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4162)
                        },
                        new
                        {
                            Id = new Guid("592729f1-6cfd-4df0-b14e-5fe6fe7628f7"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4163),
                            IsActive = true,
                            ModuleActionId = new Guid("18b3f1b9-49a5-4f2d-9b97-61d0af6ae28b"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4163)
                        },
                        new
                        {
                            Id = new Guid("70f2226c-9874-48b4-a5f9-3d6a9b95fbc6"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4164),
                            IsActive = true,
                            ModuleActionId = new Guid("a873a5d9-2cca-4811-a885-c5c52f32930c"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4164)
                        },
                        new
                        {
                            Id = new Guid("cd52dfa1-bc13-47a0-ac61-25e6d8da60c9"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4165),
                            IsActive = true,
                            ModuleActionId = new Guid("803e67df-264a-4339-8188-655a396a637e"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4165)
                        },
                        new
                        {
                            Id = new Guid("36106883-d3b0-4d17-a232-160a0cefb5e0"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4166),
                            IsActive = true,
                            ModuleActionId = new Guid("1d33b040-3353-4eeb-9ce1-c0e8bd8f49da"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4166)
                        },
                        new
                        {
                            Id = new Guid("0e08ea03-69e9-45d7-9036-dc5c3b4343a2"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4169),
                            IsActive = true,
                            ModuleActionId = new Guid("2e7a1420-0397-4c15-88bc-3c0ffb034251"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4169)
                        },
                        new
                        {
                            Id = new Guid("4a2d708f-0249-4648-81ea-1dc6cb02e9b7"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4170),
                            IsActive = true,
                            ModuleActionId = new Guid("026e07e3-2597-49d7-9525-e57fee403120"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4170)
                        },
                        new
                        {
                            Id = new Guid("4fc2158f-9010-440e-8930-d3cf63c99849"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4171),
                            IsActive = true,
                            ModuleActionId = new Guid("0a014fab-cb43-4f36-ad3f-3c7efb0b57ac"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4171)
                        },
                        new
                        {
                            Id = new Guid("ac72909c-bb74-4c59-90bd-0e8ed7709f17"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4172),
                            IsActive = true,
                            ModuleActionId = new Guid("f3d31352-0e5e-47be-ac61-575a8b67eed2"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4172)
                        },
                        new
                        {
                            Id = new Guid("a967a98f-1d17-4a6d-b6c6-fdee5a482972"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4173),
                            IsActive = true,
                            ModuleActionId = new Guid("0a1c7340-c811-4279-a010-caaacdf88a34"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4173)
                        },
                        new
                        {
                            Id = new Guid("5153a691-f6ad-42f9-b025-d3175afb3bdb"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4174),
                            IsActive = true,
                            ModuleActionId = new Guid("d3299a5e-aeae-44e5-96d1-1c7b15e92ede"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4174)
                        },
                        new
                        {
                            Id = new Guid("7c67bad4-de81-4606-92ec-14fb46bf2162"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4174),
                            IsActive = true,
                            ModuleActionId = new Guid("e5459fbc-71cf-44d2-88b0-1e9e3866662f"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4175)
                        },
                        new
                        {
                            Id = new Guid("665a0ac7-7cc1-4cf6-95d6-1f68b9f28b9b"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4175),
                            IsActive = true,
                            ModuleActionId = new Guid("9516146b-3072-4a13-934e-d7dc26b6f04e"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4176)
                        },
                        new
                        {
                            Id = new Guid("aa34f7af-9772-4a06-9fa7-dd475175d6b1"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4178),
                            IsActive = true,
                            ModuleActionId = new Guid("5343eaf8-28ec-437a-91f1-4f64a8054a4d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4178)
                        });
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("85039db5-a2c2-4736-a0eb-af6762ee4098"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(3035),
                            IsActive = true,
                            Name = "Admin",
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(3037)
                        },
                        new
                        {
                            Id = new Guid("1a0e7d91-cbca-4b87-94d8-535d1edde83e"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(3040),
                            IsActive = true,
                            Name = "User",
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(3040)
                        });
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.RolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e3e9d377-4c6a-46cc-8905-f200fb089410"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4230),
                            IsActive = true,
                            PermissionId = new Guid("d7ab27ad-3685-4a71-a052-baec97b3d29e"),
                            RoleId = new Guid("85039db5-a2c2-4736-a0eb-af6762ee4098"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4230)
                        },
                        new
                        {
                            Id = new Guid("764363ab-f2cf-44b8-bf24-1332356180f7"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4253),
                            IsActive = true,
                            PermissionId = new Guid("b7321a31-7f5a-4ef1-b5c5-932bde94dfc1"),
                            RoleId = new Guid("85039db5-a2c2-4736-a0eb-af6762ee4098"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4253)
                        },
                        new
                        {
                            Id = new Guid("9b1d36af-c883-4bd2-9cc1-9cf6cec4a5e0"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4259),
                            IsActive = true,
                            PermissionId = new Guid("0c514eb6-6455-4717-8991-6c8408ba865c"),
                            RoleId = new Guid("85039db5-a2c2-4736-a0eb-af6762ee4098"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4259)
                        },
                        new
                        {
                            Id = new Guid("ce7be2ec-c837-436f-97fb-adc1954c222b"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4263),
                            IsActive = true,
                            PermissionId = new Guid("50a33715-2873-4c3c-b3f6-1f016d152caa"),
                            RoleId = new Guid("85039db5-a2c2-4736-a0eb-af6762ee4098"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4263)
                        },
                        new
                        {
                            Id = new Guid("b7fa349f-41ab-48cb-b5c4-7375534241b7"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4267),
                            IsActive = true,
                            PermissionId = new Guid("a0554695-4366-4f69-a37a-3db53cfcf15f"),
                            RoleId = new Guid("85039db5-a2c2-4736-a0eb-af6762ee4098"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4267)
                        },
                        new
                        {
                            Id = new Guid("9cc121e2-4a3d-4aff-bb21-a304b246383b"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4275),
                            IsActive = true,
                            PermissionId = new Guid("a0554695-4366-4f69-a37a-3db53cfcf15f"),
                            RoleId = new Guid("1a0e7d91-cbca-4b87-94d8-535d1edde83e"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4275)
                        },
                        new
                        {
                            Id = new Guid("e62ce5a0-d44b-410a-910f-0d70df39cfae"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4277),
                            IsActive = true,
                            PermissionId = new Guid("01918278-8f94-4363-960f-1bba50581b88"),
                            RoleId = new Guid("85039db5-a2c2-4736-a0eb-af6762ee4098"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4278)
                        },
                        new
                        {
                            Id = new Guid("97d5f8e1-3551-4611-8385-e02d3c3f1b35"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4315),
                            IsActive = true,
                            PermissionId = new Guid("01918278-8f94-4363-960f-1bba50581b88"),
                            RoleId = new Guid("1a0e7d91-cbca-4b87-94d8-535d1edde83e"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4315)
                        },
                        new
                        {
                            Id = new Guid("7f83bf46-324c-424d-8be1-196c27a4716d"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4318),
                            IsActive = true,
                            PermissionId = new Guid("d60fbdf7-7eef-4dbe-b501-1f9e1a9c3804"),
                            RoleId = new Guid("85039db5-a2c2-4736-a0eb-af6762ee4098"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4318)
                        },
                        new
                        {
                            Id = new Guid("c55e6aa7-9c7c-4be0-98e9-38f99723decc"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4326),
                            IsActive = true,
                            PermissionId = new Guid("d60fbdf7-7eef-4dbe-b501-1f9e1a9c3804"),
                            RoleId = new Guid("1a0e7d91-cbca-4b87-94d8-535d1edde83e"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4326)
                        },
                        new
                        {
                            Id = new Guid("91a581db-1f55-426a-a312-e86a6400fa00"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4327),
                            IsActive = true,
                            PermissionId = new Guid("592729f1-6cfd-4df0-b14e-5fe6fe7628f7"),
                            RoleId = new Guid("85039db5-a2c2-4736-a0eb-af6762ee4098"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4328)
                        },
                        new
                        {
                            Id = new Guid("b51c7a70-8524-437c-afd9-f7e3945ad561"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4333),
                            IsActive = true,
                            PermissionId = new Guid("592729f1-6cfd-4df0-b14e-5fe6fe7628f7"),
                            RoleId = new Guid("1a0e7d91-cbca-4b87-94d8-535d1edde83e"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4333)
                        },
                        new
                        {
                            Id = new Guid("cce8b73e-f612-46b2-88bd-ebb87c13e7fb"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4335),
                            IsActive = true,
                            PermissionId = new Guid("70f2226c-9874-48b4-a5f9-3d6a9b95fbc6"),
                            RoleId = new Guid("85039db5-a2c2-4736-a0eb-af6762ee4098"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4335)
                        },
                        new
                        {
                            Id = new Guid("b73a88b8-b95a-4a31-ba77-dac881d38edf"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4341),
                            IsActive = true,
                            PermissionId = new Guid("cd52dfa1-bc13-47a0-ac61-25e6d8da60c9"),
                            RoleId = new Guid("85039db5-a2c2-4736-a0eb-af6762ee4098"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4342)
                        },
                        new
                        {
                            Id = new Guid("ae8b5ff0-97dc-457d-b428-4fbc41a6a225"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4347),
                            IsActive = true,
                            PermissionId = new Guid("cd52dfa1-bc13-47a0-ac61-25e6d8da60c9"),
                            RoleId = new Guid("1a0e7d91-cbca-4b87-94d8-535d1edde83e"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4347)
                        },
                        new
                        {
                            Id = new Guid("3e4746d7-c551-4714-a60c-5eb5450dff9b"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4350),
                            IsActive = true,
                            PermissionId = new Guid("36106883-d3b0-4d17-a232-160a0cefb5e0"),
                            RoleId = new Guid("85039db5-a2c2-4736-a0eb-af6762ee4098"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4350)
                        },
                        new
                        {
                            Id = new Guid("4fcc7fa4-0375-4819-a692-d45c55bd0ac9"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4355),
                            IsActive = true,
                            PermissionId = new Guid("36106883-d3b0-4d17-a232-160a0cefb5e0"),
                            RoleId = new Guid("1a0e7d91-cbca-4b87-94d8-535d1edde83e"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4355)
                        },
                        new
                        {
                            Id = new Guid("750d9861-c6da-4329-93e7-6864ab6adfa6"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4357),
                            IsActive = true,
                            PermissionId = new Guid("0e08ea03-69e9-45d7-9036-dc5c3b4343a2"),
                            RoleId = new Guid("85039db5-a2c2-4736-a0eb-af6762ee4098"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4358)
                        },
                        new
                        {
                            Id = new Guid("cb2bd93e-9970-4e9f-b53f-8520ccd88a9d"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4363),
                            IsActive = true,
                            PermissionId = new Guid("0e08ea03-69e9-45d7-9036-dc5c3b4343a2"),
                            RoleId = new Guid("1a0e7d91-cbca-4b87-94d8-535d1edde83e"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4363)
                        },
                        new
                        {
                            Id = new Guid("46794543-be34-4ffc-a5fc-ca99760467a7"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4365),
                            IsActive = true,
                            PermissionId = new Guid("4a2d708f-0249-4648-81ea-1dc6cb02e9b7"),
                            RoleId = new Guid("85039db5-a2c2-4736-a0eb-af6762ee4098"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4365)
                        },
                        new
                        {
                            Id = new Guid("6c62721a-d403-4e10-825b-b1b803a42e1d"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4370),
                            IsActive = true,
                            PermissionId = new Guid("4a2d708f-0249-4648-81ea-1dc6cb02e9b7"),
                            RoleId = new Guid("1a0e7d91-cbca-4b87-94d8-535d1edde83e"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4370)
                        },
                        new
                        {
                            Id = new Guid("6c6881d6-96fc-4931-bba6-9795596d07e4"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4372),
                            IsActive = true,
                            PermissionId = new Guid("4fc2158f-9010-440e-8930-d3cf63c99849"),
                            RoleId = new Guid("85039db5-a2c2-4736-a0eb-af6762ee4098"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4372)
                        },
                        new
                        {
                            Id = new Guid("474c96f0-20ce-4a84-b03a-64a1b615fca4"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4379),
                            IsActive = true,
                            PermissionId = new Guid("ac72909c-bb74-4c59-90bd-0e8ed7709f17"),
                            RoleId = new Guid("85039db5-a2c2-4736-a0eb-af6762ee4098"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4379)
                        },
                        new
                        {
                            Id = new Guid("172c82c3-e39c-4b0a-a1b7-ef459a6bd4a9"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4386),
                            IsActive = true,
                            PermissionId = new Guid("ac72909c-bb74-4c59-90bd-0e8ed7709f17"),
                            RoleId = new Guid("1a0e7d91-cbca-4b87-94d8-535d1edde83e"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4386)
                        },
                        new
                        {
                            Id = new Guid("48b624a9-c126-4272-ad41-2fd44490b91b"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4387),
                            IsActive = true,
                            PermissionId = new Guid("a967a98f-1d17-4a6d-b6c6-fdee5a482972"),
                            RoleId = new Guid("85039db5-a2c2-4736-a0eb-af6762ee4098"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4387)
                        },
                        new
                        {
                            Id = new Guid("8e95ea1e-2981-4e32-9705-097f6e2ef437"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4393),
                            IsActive = true,
                            PermissionId = new Guid("5153a691-f6ad-42f9-b025-d3175afb3bdb"),
                            RoleId = new Guid("85039db5-a2c2-4736-a0eb-af6762ee4098"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4394)
                        },
                        new
                        {
                            Id = new Guid("08b352a5-c0cd-4a6a-9a04-0dc9fa842ca5"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4400),
                            IsActive = true,
                            PermissionId = new Guid("7c67bad4-de81-4606-92ec-14fb46bf2162"),
                            RoleId = new Guid("85039db5-a2c2-4736-a0eb-af6762ee4098"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4400)
                        },
                        new
                        {
                            Id = new Guid("f505f125-1236-48d1-adfb-189b6504bfaa"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4406),
                            IsActive = true,
                            PermissionId = new Guid("665a0ac7-7cc1-4cf6-95d6-1f68b9f28b9b"),
                            RoleId = new Guid("85039db5-a2c2-4736-a0eb-af6762ee4098"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4406)
                        },
                        new
                        {
                            Id = new Guid("cebf5c3b-56b0-4225-9192-b2e33333e618"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4412),
                            IsActive = true,
                            PermissionId = new Guid("aa34f7af-9772-4a06-9fa7-dd475175d6b1"),
                            RoleId = new Guid("85039db5-a2c2-4736-a0eb-af6762ee4098"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4412)
                        },
                        new
                        {
                            Id = new Guid("d5307789-2c6d-4e08-99f7-5e9953e50ce3"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4423),
                            IsActive = true,
                            PermissionId = new Guid("aa34f7af-9772-4a06-9fa7-dd475175d6b1"),
                            RoleId = new Guid("1a0e7d91-cbca-4b87-94d8-535d1edde83e"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(4424)
                        });
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6a12c44d-f920-4336-8345-0b5c8a64c741"),
                            CreatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(3158),
                            DateOfBirth = new DateTime(2000, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alvaroku123@gmail.com",
                            IsActive = true,
                            Name = "Alvaro Kú",
                            PasswordHash = "b2867617492e26c338ab49f72afabc984d798b59755a27e312b953716ae964d7",
                            PhoneNumber = "9919596720",
                            RoleId = new Guid("85039db5-a2c2-4736-a0eb-af6762ee4098"),
                            UpdatedAt = new DateTime(2024, 9, 24, 13, 14, 26, 571, DateTimeKind.Utc).AddTicks(3159)
                        });
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.UserFriend", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FriendId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "FriendId");

                    b.HasIndex("FriendId");

                    b.ToTable("UserFriends");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Album", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.AlbumUser", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Album", "Album")
                        .WithMany("AlbumUsers")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedMomentsBackend.App.Models.Entities.User", "User")
                        .WithMany("AlbumUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Moment", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Album", "Album")
                        .WithMany("Moments")
                        .HasForeignKey("AlbumId");

                    b.HasOne("SharedMomentsBackend.App.Models.Entities.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.MomentResource", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Moment", "Moment")
                        .WithMany("MomentResources")
                        .HasForeignKey("MomentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Resource", "Resource")
                        .WithMany("MomentResources")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moment");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.MomentUser", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Moment", "Moment")
                        .WithMany("MomentUsers")
                        .HasForeignKey("MomentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedMomentsBackend.App.Models.Entities.User", "User")
                        .WithMany("MomentUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.ModuleAction", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Security.Action", "Action")
                        .WithMany("ModuleActions")
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Security.Module", "Module")
                        .WithMany("ModuleActions")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Permission", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Security.ModuleAction", "ModuleAction")
                        .WithMany()
                        .HasForeignKey("ModuleActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModuleAction");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.RolePermission", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Security.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Security.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.User", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Resource", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");

                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Security.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.UserFriend", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.User", "Friend")
                        .WithMany()
                        .HasForeignKey("FriendId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SharedMomentsBackend.App.Models.Entities.User", "User")
                        .WithMany("UserFriends")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Friend");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Album", b =>
                {
                    b.Navigation("AlbumUsers");

                    b.Navigation("Moments");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Moment", b =>
                {
                    b.Navigation("MomentResources");

                    b.Navigation("MomentUsers");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Resource", b =>
                {
                    b.Navigation("MomentResources");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Action", b =>
                {
                    b.Navigation("ModuleActions");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Module", b =>
                {
                    b.Navigation("ModuleActions");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Role", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.User", b =>
                {
                    b.Navigation("AlbumUsers");

                    b.Navigation("MomentUsers");

                    b.Navigation("UserFriends");
                });
#pragma warning restore 612, 618
        }
    }
}
