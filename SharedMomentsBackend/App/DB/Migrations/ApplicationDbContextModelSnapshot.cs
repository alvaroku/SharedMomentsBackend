// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SharedMomentsBackend.App.DB;

#nullable disable

namespace SharedMomentsBackend.App.DB.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Album", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.AlbumUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlbumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("UserId");

                    b.ToTable("AlbumUsers");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Moment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AlbumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Moments");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.MomentResource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MomentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MomentId");

                    b.HasIndex("ResourceId");

                    b.ToTable("MomentResources");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.MomentUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MomentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MomentId");

                    b.HasIndex("UserId");

                    b.ToTable("MomentUsers");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Size")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Action", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Actions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ff2e2bae-b84e-40d0-8723-0a1c8c4358ff"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9775),
                            IsActive = true,
                            Name = "Create",
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9776)
                        },
                        new
                        {
                            Id = new Guid("32226422-fd4b-435d-8622-f5966fadf7d3"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9778),
                            IsActive = true,
                            Name = "Read",
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9778)
                        },
                        new
                        {
                            Id = new Guid("438df840-9c8a-4e8d-9df5-5e1a01f25470"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9779),
                            IsActive = true,
                            Name = "Update",
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9780)
                        },
                        new
                        {
                            Id = new Guid("ae666752-8ae3-422e-8e8f-70904beb8d15"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9781),
                            IsActive = true,
                            Name = "Delete",
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9781)
                        },
                        new
                        {
                            Id = new Guid("6cc41e61-a0b4-4d88-b963-ecbe5aff1ddb"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9782),
                            IsActive = true,
                            Name = "ChangeStatus",
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9782)
                        });
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Module", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Modules");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a5ddeab6-add2-4f76-b8e4-47122a68f989"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9727),
                            IsActive = true,
                            Name = "Users",
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9727)
                        },
                        new
                        {
                            Id = new Guid("e917669a-0930-4e29-b1d8-e70e4b479f74"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9731),
                            IsActive = true,
                            Name = "Moments",
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9731)
                        },
                        new
                        {
                            Id = new Guid("cd9bcd28-6ef4-4601-a259-cba810a90406"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9732),
                            IsActive = true,
                            Name = "Albums",
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9733)
                        },
                        new
                        {
                            Id = new Guid("8a5ef4e6-c8bb-4422-8aae-2d80c860d149"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9734),
                            IsActive = true,
                            Name = "Resources",
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9734)
                        });
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.ModuleAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("ModuleId");

                    b.ToTable("ModuleActions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("622fc1a5-d3b8-4426-ba7e-3eef9c55c47b"),
                            ActionId = new Guid("ff2e2bae-b84e-40d0-8723-0a1c8c4358ff"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9807),
                            IsActive = true,
                            ModuleId = new Guid("a5ddeab6-add2-4f76-b8e4-47122a68f989"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9808)
                        },
                        new
                        {
                            Id = new Guid("9ba36d36-095c-4389-84aa-a2efe122460e"),
                            ActionId = new Guid("32226422-fd4b-435d-8622-f5966fadf7d3"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9812),
                            IsActive = true,
                            ModuleId = new Guid("a5ddeab6-add2-4f76-b8e4-47122a68f989"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9812)
                        },
                        new
                        {
                            Id = new Guid("2b6607cb-3e80-4ad5-a7f3-42fa017e01e2"),
                            ActionId = new Guid("438df840-9c8a-4e8d-9df5-5e1a01f25470"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9815),
                            IsActive = true,
                            ModuleId = new Guid("a5ddeab6-add2-4f76-b8e4-47122a68f989"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9815)
                        },
                        new
                        {
                            Id = new Guid("e73e29a2-14e0-4b9d-98c5-e3838156d66d"),
                            ActionId = new Guid("ae666752-8ae3-422e-8e8f-70904beb8d15"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9816),
                            IsActive = true,
                            ModuleId = new Guid("a5ddeab6-add2-4f76-b8e4-47122a68f989"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9816)
                        },
                        new
                        {
                            Id = new Guid("4b92de4f-06f6-4c1d-8f28-675c9043c354"),
                            ActionId = new Guid("6cc41e61-a0b4-4d88-b963-ecbe5aff1ddb"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9817),
                            IsActive = true,
                            ModuleId = new Guid("a5ddeab6-add2-4f76-b8e4-47122a68f989"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9817)
                        },
                        new
                        {
                            Id = new Guid("8919540f-26b8-412d-80ad-48758df9cffd"),
                            ActionId = new Guid("ff2e2bae-b84e-40d0-8723-0a1c8c4358ff"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9819),
                            IsActive = true,
                            ModuleId = new Guid("e917669a-0930-4e29-b1d8-e70e4b479f74"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9819)
                        },
                        new
                        {
                            Id = new Guid("e443d2e8-8334-40a9-8395-3156d66cd249"),
                            ActionId = new Guid("32226422-fd4b-435d-8622-f5966fadf7d3"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9820),
                            IsActive = true,
                            ModuleId = new Guid("e917669a-0930-4e29-b1d8-e70e4b479f74"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9820)
                        },
                        new
                        {
                            Id = new Guid("749b775c-abeb-49fa-99f9-819b4e554c7c"),
                            ActionId = new Guid("438df840-9c8a-4e8d-9df5-5e1a01f25470"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9821),
                            IsActive = true,
                            ModuleId = new Guid("e917669a-0930-4e29-b1d8-e70e4b479f74"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9821)
                        },
                        new
                        {
                            Id = new Guid("5b548629-b89c-49e9-9f12-6b198f16abec"),
                            ActionId = new Guid("ae666752-8ae3-422e-8e8f-70904beb8d15"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9821),
                            IsActive = true,
                            ModuleId = new Guid("e917669a-0930-4e29-b1d8-e70e4b479f74"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9822)
                        },
                        new
                        {
                            Id = new Guid("8ffaa508-1f1a-4116-8ef4-1f7185e0ca78"),
                            ActionId = new Guid("6cc41e61-a0b4-4d88-b963-ecbe5aff1ddb"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9823),
                            IsActive = true,
                            ModuleId = new Guid("e917669a-0930-4e29-b1d8-e70e4b479f74"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9823)
                        },
                        new
                        {
                            Id = new Guid("3ff900ef-989b-4c45-bd14-ba9efd65383a"),
                            ActionId = new Guid("ff2e2bae-b84e-40d0-8723-0a1c8c4358ff"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9826),
                            IsActive = true,
                            ModuleId = new Guid("cd9bcd28-6ef4-4601-a259-cba810a90406"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9826)
                        },
                        new
                        {
                            Id = new Guid("dba59d2c-5617-4a5c-a702-7216583ba46d"),
                            ActionId = new Guid("32226422-fd4b-435d-8622-f5966fadf7d3"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9827),
                            IsActive = true,
                            ModuleId = new Guid("cd9bcd28-6ef4-4601-a259-cba810a90406"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9827)
                        },
                        new
                        {
                            Id = new Guid("87136741-dab2-4e30-8818-347233405675"),
                            ActionId = new Guid("438df840-9c8a-4e8d-9df5-5e1a01f25470"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9828),
                            IsActive = true,
                            ModuleId = new Guid("cd9bcd28-6ef4-4601-a259-cba810a90406"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9828)
                        },
                        new
                        {
                            Id = new Guid("aa189dbf-21ae-472b-a9e6-aedabacb7a7b"),
                            ActionId = new Guid("ae666752-8ae3-422e-8e8f-70904beb8d15"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9829),
                            IsActive = true,
                            ModuleId = new Guid("cd9bcd28-6ef4-4601-a259-cba810a90406"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9829)
                        },
                        new
                        {
                            Id = new Guid("8751bde9-7d8b-4fbe-8f23-a2293a542f02"),
                            ActionId = new Guid("6cc41e61-a0b4-4d88-b963-ecbe5aff1ddb"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9829),
                            IsActive = true,
                            ModuleId = new Guid("cd9bcd28-6ef4-4601-a259-cba810a90406"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9830)
                        },
                        new
                        {
                            Id = new Guid("ffb29d1d-7ea2-41d9-8d32-099b23f84052"),
                            ActionId = new Guid("ff2e2bae-b84e-40d0-8723-0a1c8c4358ff"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9830),
                            IsActive = true,
                            ModuleId = new Guid("8a5ef4e6-c8bb-4422-8aae-2d80c860d149"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9831)
                        },
                        new
                        {
                            Id = new Guid("684f266d-c0af-4731-a687-363cf43b44ab"),
                            ActionId = new Guid("32226422-fd4b-435d-8622-f5966fadf7d3"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9831),
                            IsActive = true,
                            ModuleId = new Guid("8a5ef4e6-c8bb-4422-8aae-2d80c860d149"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9832)
                        },
                        new
                        {
                            Id = new Guid("2c4911d5-7a3e-414c-9ceb-54d1e749aec2"),
                            ActionId = new Guid("438df840-9c8a-4e8d-9df5-5e1a01f25470"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9833),
                            IsActive = true,
                            ModuleId = new Guid("8a5ef4e6-c8bb-4422-8aae-2d80c860d149"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9834)
                        },
                        new
                        {
                            Id = new Guid("6fbfb466-6ff6-4043-9924-85c5bbce0f67"),
                            ActionId = new Guid("ae666752-8ae3-422e-8e8f-70904beb8d15"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9836),
                            IsActive = true,
                            ModuleId = new Guid("8a5ef4e6-c8bb-4422-8aae-2d80c860d149"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9836)
                        },
                        new
                        {
                            Id = new Guid("67288ef1-7952-4b02-96f8-c28e16791a3d"),
                            ActionId = new Guid("6cc41e61-a0b4-4d88-b963-ecbe5aff1ddb"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9837),
                            IsActive = true,
                            ModuleId = new Guid("8a5ef4e6-c8bb-4422-8aae-2d80c860d149"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9837)
                        });
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModuleActionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ModuleActionId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1f88e8b5-108d-484e-8c3c-83e222df36f6"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9894),
                            IsActive = true,
                            ModuleActionId = new Guid("622fc1a5-d3b8-4426-ba7e-3eef9c55c47b"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9895)
                        },
                        new
                        {
                            Id = new Guid("a889ebbb-13f7-47e6-b0ca-ff9ec8a8013a"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9898),
                            IsActive = true,
                            ModuleActionId = new Guid("9ba36d36-095c-4389-84aa-a2efe122460e"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9898)
                        },
                        new
                        {
                            Id = new Guid("455cc9fb-f187-4c2f-af5f-5af5ebcc224d"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9899),
                            IsActive = true,
                            ModuleActionId = new Guid("2b6607cb-3e80-4ad5-a7f3-42fa017e01e2"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9900)
                        },
                        new
                        {
                            Id = new Guid("22850a87-11ff-4bbf-8831-306d87a4871a"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9901),
                            IsActive = true,
                            ModuleActionId = new Guid("e73e29a2-14e0-4b9d-98c5-e3838156d66d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9901)
                        },
                        new
                        {
                            Id = new Guid("7fa5b6f1-09bc-465a-9f43-260603a49cf6"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9902),
                            IsActive = true,
                            ModuleActionId = new Guid("4b92de4f-06f6-4c1d-8f28-675c9043c354"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9902)
                        },
                        new
                        {
                            Id = new Guid("482adfba-e417-4c4a-ac85-db066c1aa816"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9903),
                            IsActive = true,
                            ModuleActionId = new Guid("8919540f-26b8-412d-80ad-48758df9cffd"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9903)
                        },
                        new
                        {
                            Id = new Guid("36b2266e-a6c8-4962-922b-8b2be9720c5a"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9904),
                            IsActive = true,
                            ModuleActionId = new Guid("e443d2e8-8334-40a9-8395-3156d66cd249"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9904)
                        },
                        new
                        {
                            Id = new Guid("78e42460-6722-4b4c-91a7-6a0ad1ef36a1"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9906),
                            IsActive = true,
                            ModuleActionId = new Guid("749b775c-abeb-49fa-99f9-819b4e554c7c"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9907)
                        },
                        new
                        {
                            Id = new Guid("81e0da8a-bde9-46e0-9b97-21cf8f40eb3e"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9908),
                            IsActive = true,
                            ModuleActionId = new Guid("5b548629-b89c-49e9-9f12-6b198f16abec"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9908)
                        },
                        new
                        {
                            Id = new Guid("3675810b-e9be-4412-a58b-c730e9a6d53f"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9909),
                            IsActive = true,
                            ModuleActionId = new Guid("8ffaa508-1f1a-4116-8ef4-1f7185e0ca78"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9909)
                        },
                        new
                        {
                            Id = new Guid("33d425c9-4267-4e52-88f5-92e9ffb5d886"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9910),
                            IsActive = true,
                            ModuleActionId = new Guid("3ff900ef-989b-4c45-bd14-ba9efd65383a"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9910)
                        },
                        new
                        {
                            Id = new Guid("dc2bfc38-b0f5-423b-8a4c-927e1725b2df"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9911),
                            IsActive = true,
                            ModuleActionId = new Guid("dba59d2c-5617-4a5c-a702-7216583ba46d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9911)
                        },
                        new
                        {
                            Id = new Guid("1d76cee5-8ba5-46dd-a178-05363eaffb3e"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9912),
                            IsActive = true,
                            ModuleActionId = new Guid("87136741-dab2-4e30-8818-347233405675"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9912)
                        },
                        new
                        {
                            Id = new Guid("b4b0a7e4-a034-4598-9d5e-ee1e60282401"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9912),
                            IsActive = true,
                            ModuleActionId = new Guid("aa189dbf-21ae-472b-a9e6-aedabacb7a7b"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9913)
                        },
                        new
                        {
                            Id = new Guid("0d1de5a5-faab-4a87-90cb-d81dc0ec6c44"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9913),
                            IsActive = true,
                            ModuleActionId = new Guid("8751bde9-7d8b-4fbe-8f23-a2293a542f02"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9914)
                        },
                        new
                        {
                            Id = new Guid("edb88a9c-dc89-4531-ae28-238ca0710bc7"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9916),
                            IsActive = true,
                            ModuleActionId = new Guid("ffb29d1d-7ea2-41d9-8d32-099b23f84052"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9916)
                        },
                        new
                        {
                            Id = new Guid("9a67c10b-3e32-4758-9a95-903d31a9da1d"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9916),
                            IsActive = true,
                            ModuleActionId = new Guid("684f266d-c0af-4731-a687-363cf43b44ab"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9917)
                        },
                        new
                        {
                            Id = new Guid("39ba2a09-f6b8-4d29-8145-0e6d15164361"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9917),
                            IsActive = true,
                            ModuleActionId = new Guid("2c4911d5-7a3e-414c-9ceb-54d1e749aec2"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9918)
                        },
                        new
                        {
                            Id = new Guid("62917908-4544-4dbd-8ebd-6345bbf2b189"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9918),
                            IsActive = true,
                            ModuleActionId = new Guid("6fbfb466-6ff6-4043-9924-85c5bbce0f67"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9919)
                        },
                        new
                        {
                            Id = new Guid("b13c8f82-cfd0-408c-b5e1-08f13b354a32"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9919),
                            IsActive = true,
                            ModuleActionId = new Guid("67288ef1-7952-4b02-96f8-c28e16791a3d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9920)
                        });
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e6c5469a-4882-4a38-b0d3-1c44ead46a8d"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(8665),
                            IsActive = true,
                            Name = "Admin",
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(8667)
                        },
                        new
                        {
                            Id = new Guid("da7c8204-8ed0-462b-b287-833053b1514e"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(8669),
                            IsActive = true,
                            Name = "User",
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(8669)
                        });
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.RolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b09c4fab-3c0d-4c9c-a4d9-7d5e396e1568"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9986),
                            IsActive = true,
                            PermissionId = new Guid("1f88e8b5-108d-484e-8c3c-83e222df36f6"),
                            RoleId = new Guid("e6c5469a-4882-4a38-b0d3-1c44ead46a8d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(9986)
                        },
                        new
                        {
                            Id = new Guid("5945165b-e33e-448c-9e66-721bd6138292"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(17),
                            IsActive = true,
                            PermissionId = new Guid("a889ebbb-13f7-47e6-b0ca-ff9ec8a8013a"),
                            RoleId = new Guid("e6c5469a-4882-4a38-b0d3-1c44ead46a8d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(17)
                        },
                        new
                        {
                            Id = new Guid("b3633229-0cd8-491d-bb79-d541bdd8bad5"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(22),
                            IsActive = true,
                            PermissionId = new Guid("455cc9fb-f187-4c2f-af5f-5af5ebcc224d"),
                            RoleId = new Guid("e6c5469a-4882-4a38-b0d3-1c44ead46a8d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(23)
                        },
                        new
                        {
                            Id = new Guid("f604c3e1-9669-4c47-a163-293afa4ef158"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(28),
                            IsActive = true,
                            PermissionId = new Guid("22850a87-11ff-4bbf-8831-306d87a4871a"),
                            RoleId = new Guid("e6c5469a-4882-4a38-b0d3-1c44ead46a8d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(28)
                        },
                        new
                        {
                            Id = new Guid("318e7835-c21e-4684-ae0a-d67bd39aa230"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(32),
                            IsActive = true,
                            PermissionId = new Guid("7fa5b6f1-09bc-465a-9f43-260603a49cf6"),
                            RoleId = new Guid("e6c5469a-4882-4a38-b0d3-1c44ead46a8d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(32)
                        },
                        new
                        {
                            Id = new Guid("2a2e06b0-b385-4a2b-8fdd-ad7756bf24cb"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(39),
                            IsActive = true,
                            PermissionId = new Guid("7fa5b6f1-09bc-465a-9f43-260603a49cf6"),
                            RoleId = new Guid("da7c8204-8ed0-462b-b287-833053b1514e"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(40)
                        },
                        new
                        {
                            Id = new Guid("82bdddab-b435-4fe0-ae00-aa3627da4938"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(43),
                            IsActive = true,
                            PermissionId = new Guid("482adfba-e417-4c4a-ac85-db066c1aa816"),
                            RoleId = new Guid("e6c5469a-4882-4a38-b0d3-1c44ead46a8d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(43)
                        },
                        new
                        {
                            Id = new Guid("cf65078e-049f-4588-b122-9877732f69f7"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(55),
                            IsActive = true,
                            PermissionId = new Guid("482adfba-e417-4c4a-ac85-db066c1aa816"),
                            RoleId = new Guid("da7c8204-8ed0-462b-b287-833053b1514e"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(55)
                        },
                        new
                        {
                            Id = new Guid("4e6c2177-9647-471c-a846-4a46efc9baa9"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(59),
                            IsActive = true,
                            PermissionId = new Guid("36b2266e-a6c8-4962-922b-8b2be9720c5a"),
                            RoleId = new Guid("e6c5469a-4882-4a38-b0d3-1c44ead46a8d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(59)
                        },
                        new
                        {
                            Id = new Guid("6532c612-0e5b-4899-b451-1b500e84f3e6"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(65),
                            IsActive = true,
                            PermissionId = new Guid("36b2266e-a6c8-4962-922b-8b2be9720c5a"),
                            RoleId = new Guid("da7c8204-8ed0-462b-b287-833053b1514e"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(65)
                        },
                        new
                        {
                            Id = new Guid("93cd3087-c067-4f5d-b93f-f1458ffc5daa"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(66),
                            IsActive = true,
                            PermissionId = new Guid("78e42460-6722-4b4c-91a7-6a0ad1ef36a1"),
                            RoleId = new Guid("e6c5469a-4882-4a38-b0d3-1c44ead46a8d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(67)
                        },
                        new
                        {
                            Id = new Guid("673e9357-216d-4745-abaa-0bdaa91217bb"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(73),
                            IsActive = true,
                            PermissionId = new Guid("78e42460-6722-4b4c-91a7-6a0ad1ef36a1"),
                            RoleId = new Guid("da7c8204-8ed0-462b-b287-833053b1514e"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(73)
                        },
                        new
                        {
                            Id = new Guid("d4b5c0d5-018d-4b54-b2d7-cf2236ce4bd2"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(75),
                            IsActive = true,
                            PermissionId = new Guid("81e0da8a-bde9-46e0-9b97-21cf8f40eb3e"),
                            RoleId = new Guid("e6c5469a-4882-4a38-b0d3-1c44ead46a8d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(75)
                        },
                        new
                        {
                            Id = new Guid("635438fe-3efd-47b6-9004-099a63967a57"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(81),
                            IsActive = true,
                            PermissionId = new Guid("3675810b-e9be-4412-a58b-c730e9a6d53f"),
                            RoleId = new Guid("e6c5469a-4882-4a38-b0d3-1c44ead46a8d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(81)
                        },
                        new
                        {
                            Id = new Guid("9fd31ca5-1da6-4e40-a187-0a4731d68adf"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(86),
                            IsActive = true,
                            PermissionId = new Guid("3675810b-e9be-4412-a58b-c730e9a6d53f"),
                            RoleId = new Guid("da7c8204-8ed0-462b-b287-833053b1514e"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(86)
                        },
                        new
                        {
                            Id = new Guid("fda68cc4-b547-465e-969e-94311c5d6450"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(88),
                            IsActive = true,
                            PermissionId = new Guid("33d425c9-4267-4e52-88f5-92e9ffb5d886"),
                            RoleId = new Guid("e6c5469a-4882-4a38-b0d3-1c44ead46a8d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(88)
                        },
                        new
                        {
                            Id = new Guid("5361ccc1-0f5b-49d8-b669-4494a6f386f8"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(93),
                            IsActive = true,
                            PermissionId = new Guid("33d425c9-4267-4e52-88f5-92e9ffb5d886"),
                            RoleId = new Guid("da7c8204-8ed0-462b-b287-833053b1514e"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(93)
                        },
                        new
                        {
                            Id = new Guid("7b3c1903-d913-46ef-b9c6-1f924f8737f2"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(95),
                            IsActive = true,
                            PermissionId = new Guid("dc2bfc38-b0f5-423b-8a4c-927e1725b2df"),
                            RoleId = new Guid("e6c5469a-4882-4a38-b0d3-1c44ead46a8d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(95)
                        },
                        new
                        {
                            Id = new Guid("6e6aa89a-29ba-4317-b7f2-f35c0e0b7f37"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(100),
                            IsActive = true,
                            PermissionId = new Guid("dc2bfc38-b0f5-423b-8a4c-927e1725b2df"),
                            RoleId = new Guid("da7c8204-8ed0-462b-b287-833053b1514e"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(100)
                        },
                        new
                        {
                            Id = new Guid("aaf57ad6-8d05-4f91-a070-b778fd564ead"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(103),
                            IsActive = true,
                            PermissionId = new Guid("1d76cee5-8ba5-46dd-a178-05363eaffb3e"),
                            RoleId = new Guid("e6c5469a-4882-4a38-b0d3-1c44ead46a8d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(103)
                        },
                        new
                        {
                            Id = new Guid("a599c835-4123-4829-80a2-223047b0140b"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(108),
                            IsActive = true,
                            PermissionId = new Guid("1d76cee5-8ba5-46dd-a178-05363eaffb3e"),
                            RoleId = new Guid("da7c8204-8ed0-462b-b287-833053b1514e"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(108)
                        },
                        new
                        {
                            Id = new Guid("2fb21b03-7761-47f9-80e3-d641df2f4ea6"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(110),
                            IsActive = true,
                            PermissionId = new Guid("b4b0a7e4-a034-4598-9d5e-ee1e60282401"),
                            RoleId = new Guid("e6c5469a-4882-4a38-b0d3-1c44ead46a8d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(110)
                        },
                        new
                        {
                            Id = new Guid("89011f81-ae29-4b41-935a-740aada8c462"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(155),
                            IsActive = true,
                            PermissionId = new Guid("0d1de5a5-faab-4a87-90cb-d81dc0ec6c44"),
                            RoleId = new Guid("e6c5469a-4882-4a38-b0d3-1c44ead46a8d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(155)
                        },
                        new
                        {
                            Id = new Guid("5e8bfb31-93da-4cde-b83b-98d278b7dbe8"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(161),
                            IsActive = true,
                            PermissionId = new Guid("0d1de5a5-faab-4a87-90cb-d81dc0ec6c44"),
                            RoleId = new Guid("da7c8204-8ed0-462b-b287-833053b1514e"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(161)
                        },
                        new
                        {
                            Id = new Guid("9a7f0430-9619-4fc6-9bf8-8aefff263ab9"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(163),
                            IsActive = true,
                            PermissionId = new Guid("edb88a9c-dc89-4531-ae28-238ca0710bc7"),
                            RoleId = new Guid("e6c5469a-4882-4a38-b0d3-1c44ead46a8d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(163)
                        },
                        new
                        {
                            Id = new Guid("9163a812-bdce-44ee-b060-13c312f0dcdf"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(169),
                            IsActive = true,
                            PermissionId = new Guid("9a67c10b-3e32-4758-9a95-903d31a9da1d"),
                            RoleId = new Guid("e6c5469a-4882-4a38-b0d3-1c44ead46a8d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(169)
                        },
                        new
                        {
                            Id = new Guid("a8d957ef-1174-43e6-a9d5-cc2cb2934863"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(175),
                            IsActive = true,
                            PermissionId = new Guid("39ba2a09-f6b8-4d29-8145-0e6d15164361"),
                            RoleId = new Guid("e6c5469a-4882-4a38-b0d3-1c44ead46a8d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(175)
                        },
                        new
                        {
                            Id = new Guid("0b401705-e2b3-4a72-830e-59ecf259526f"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(183),
                            IsActive = true,
                            PermissionId = new Guid("62917908-4544-4dbd-8ebd-6345bbf2b189"),
                            RoleId = new Guid("e6c5469a-4882-4a38-b0d3-1c44ead46a8d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(183)
                        },
                        new
                        {
                            Id = new Guid("3ca22413-da76-4187-bbe5-fbe6137976c0"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(189),
                            IsActive = true,
                            PermissionId = new Guid("b13c8f82-cfd0-408c-b5e1-08f13b354a32"),
                            RoleId = new Guid("e6c5469a-4882-4a38-b0d3-1c44ead46a8d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(190)
                        },
                        new
                        {
                            Id = new Guid("76792f32-abb3-4b49-933c-c5215d6ba3ab"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(202),
                            IsActive = true,
                            PermissionId = new Guid("b13c8f82-cfd0-408c-b5e1-08f13b354a32"),
                            RoleId = new Guid("da7c8204-8ed0-462b-b287-833053b1514e"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 486, DateTimeKind.Utc).AddTicks(202)
                        });
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("77be2037-896b-4f67-bccc-07ca18ce9041"),
                            CreatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(8912),
                            DateOfBirth = new DateTime(2000, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alvaroku123@gmail.com",
                            IsActive = true,
                            Name = "Alvaro Kú",
                            PasswordHash = "b2867617492e26c338ab49f72afabc984d798b59755a27e312b953716ae964d7",
                            PhoneNumber = "9919596720",
                            RoleId = new Guid("e6c5469a-4882-4a38-b0d3-1c44ead46a8d"),
                            UpdatedAt = new DateTime(2024, 9, 24, 5, 34, 28, 485, DateTimeKind.Utc).AddTicks(8913)
                        });
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.UserFriend", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FriendId")
                        .HasColumnType("uniqueidentifier");

                  

                    b.HasKey("UserId", "FriendId");

                    b.HasIndex("FriendId");

                    b.ToTable("UserFriends");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Album", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.AlbumUser", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Album", "Album")
                        .WithMany("AlbumUsers")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedMomentsBackend.App.Models.Entities.User", "User")
                        .WithMany("AlbumUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Moment", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Album", "Album")
                        .WithMany("Moments")
                        .HasForeignKey("AlbumId");

                    b.HasOne("SharedMomentsBackend.App.Models.Entities.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.MomentResource", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Moment", "Moment")
                        .WithMany("MomentResources")
                        .HasForeignKey("MomentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Resource", "Resource")
                        .WithMany("MomentResources")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moment");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.MomentUser", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Moment", "Moment")
                        .WithMany("MomentUsers")
                        .HasForeignKey("MomentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedMomentsBackend.App.Models.Entities.User", "User")
                        .WithMany("MomentUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.ModuleAction", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Security.Action", "Action")
                        .WithMany("ModuleActions")
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Security.Module", "Module")
                        .WithMany("ModuleActions")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Permission", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Security.ModuleAction", "ModuleAction")
                        .WithMany()
                        .HasForeignKey("ModuleActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModuleAction");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.RolePermission", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Security.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Security.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.User", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Resource", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");

                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Security.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.UserFriend", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.User", "Friend")
                        .WithMany()
                        .HasForeignKey("FriendId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SharedMomentsBackend.App.Models.Entities.User", "User")
                        .WithMany("UserFriends")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Friend");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Album", b =>
                {
                    b.Navigation("AlbumUsers");

                    b.Navigation("Moments");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Moment", b =>
                {
                    b.Navigation("MomentResources");

                    b.Navigation("MomentUsers");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Resource", b =>
                {
                    b.Navigation("MomentResources");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Action", b =>
                {
                    b.Navigation("ModuleActions");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Module", b =>
                {
                    b.Navigation("ModuleActions");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Role", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.User", b =>
                {
                    b.Navigation("AlbumUsers");

                    b.Navigation("MomentUsers");

                    b.Navigation("UserFriends");
                });
#pragma warning restore 612, 618
        }
    }
}
