// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SharedMomentsBackend.App.DB;

#nullable disable

namespace SharedMomentsBackend.App.DB.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240923175352_user_friends")]
    partial class user_friends
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Album", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.AlbumUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlbumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("UserId");

                    b.ToTable("AlbumUsers");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Moment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AlbumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Moments");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.MomentResource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MomentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MomentId");

                    b.HasIndex("ResourceId");

                    b.ToTable("MomentResources");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.MomentUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MomentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MomentId");

                    b.HasIndex("UserId");

                    b.ToTable("MomentUsers");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Size")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Action", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Actions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("56b186d3-1f07-4598-ae23-712b1a5b9fe2"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4444),
                            IsActive = true,
                            Name = "Create",
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4444)
                        },
                        new
                        {
                            Id = new Guid("63c4e40e-bb10-469a-83a5-0111e6bae0be"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4447),
                            IsActive = true,
                            Name = "Read",
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4447)
                        },
                        new
                        {
                            Id = new Guid("1a4f35f1-cceb-4aa9-b448-5ed823df4a9d"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4449),
                            IsActive = true,
                            Name = "Update",
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4450)
                        },
                        new
                        {
                            Id = new Guid("aed8b54e-4cc3-4dd6-b68a-1bfd39fca1fd"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4452),
                            IsActive = true,
                            Name = "Delete",
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4452)
                        },
                        new
                        {
                            Id = new Guid("b789df21-37e0-42f2-b4e4-f17540b50c2c"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4459),
                            IsActive = true,
                            Name = "ChangeStatus",
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4459)
                        });
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Module", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Modules");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0ec17b23-c4d4-4a61-ba31-4b93db9b0823"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4388),
                            IsActive = true,
                            Name = "Users",
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4389)
                        },
                        new
                        {
                            Id = new Guid("f493c1c3-917d-49fd-914d-42d3f0319f7b"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4395),
                            IsActive = true,
                            Name = "Moments",
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4396)
                        },
                        new
                        {
                            Id = new Guid("1b7bf363-2a53-4771-92e7-27036d403473"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4398),
                            IsActive = true,
                            Name = "Albums",
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4398)
                        },
                        new
                        {
                            Id = new Guid("ac11bc95-bf0a-4de8-9312-0b50ab30a4e9"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4400),
                            IsActive = true,
                            Name = "Resources",
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4400)
                        });
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.ModuleAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("ModuleId");

                    b.ToTable("ModuleActions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("64ebfe08-a224-4b87-9a7e-17c7fe2fe4e0"),
                            ActionId = new Guid("56b186d3-1f07-4598-ae23-712b1a5b9fe2"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4497),
                            IsActive = true,
                            ModuleId = new Guid("0ec17b23-c4d4-4a61-ba31-4b93db9b0823"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4497)
                        },
                        new
                        {
                            Id = new Guid("ecd654b4-0a2e-45da-896d-610da6fcc5cc"),
                            ActionId = new Guid("63c4e40e-bb10-469a-83a5-0111e6bae0be"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4502),
                            IsActive = true,
                            ModuleId = new Guid("0ec17b23-c4d4-4a61-ba31-4b93db9b0823"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4503)
                        },
                        new
                        {
                            Id = new Guid("34362d85-5f3c-411e-a39e-12c13bbfec83"),
                            ActionId = new Guid("1a4f35f1-cceb-4aa9-b448-5ed823df4a9d"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4504),
                            IsActive = true,
                            ModuleId = new Guid("0ec17b23-c4d4-4a61-ba31-4b93db9b0823"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4505)
                        },
                        new
                        {
                            Id = new Guid("ddbb18d7-0a32-45cb-9a5c-5c0cb820296d"),
                            ActionId = new Guid("aed8b54e-4cc3-4dd6-b68a-1bfd39fca1fd"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4506),
                            IsActive = true,
                            ModuleId = new Guid("0ec17b23-c4d4-4a61-ba31-4b93db9b0823"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4506)
                        },
                        new
                        {
                            Id = new Guid("6aa109d1-8daf-4820-aace-d0681312496b"),
                            ActionId = new Guid("b789df21-37e0-42f2-b4e4-f17540b50c2c"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4508),
                            IsActive = true,
                            ModuleId = new Guid("0ec17b23-c4d4-4a61-ba31-4b93db9b0823"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4508)
                        },
                        new
                        {
                            Id = new Guid("4fa09d33-f495-4ebc-9816-6ef4c1a0a17c"),
                            ActionId = new Guid("56b186d3-1f07-4598-ae23-712b1a5b9fe2"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4511),
                            IsActive = true,
                            ModuleId = new Guid("f493c1c3-917d-49fd-914d-42d3f0319f7b"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4512)
                        },
                        new
                        {
                            Id = new Guid("63618758-605f-4324-a00b-a88921a6c06c"),
                            ActionId = new Guid("63c4e40e-bb10-469a-83a5-0111e6bae0be"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4515),
                            IsActive = true,
                            ModuleId = new Guid("f493c1c3-917d-49fd-914d-42d3f0319f7b"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4515)
                        },
                        new
                        {
                            Id = new Guid("7042ef50-5f78-4952-bac5-7731090f29dc"),
                            ActionId = new Guid("1a4f35f1-cceb-4aa9-b448-5ed823df4a9d"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4517),
                            IsActive = true,
                            ModuleId = new Guid("f493c1c3-917d-49fd-914d-42d3f0319f7b"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4517)
                        },
                        new
                        {
                            Id = new Guid("abc47213-15f9-4803-916d-4df573367eca"),
                            ActionId = new Guid("aed8b54e-4cc3-4dd6-b68a-1bfd39fca1fd"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4518),
                            IsActive = true,
                            ModuleId = new Guid("f493c1c3-917d-49fd-914d-42d3f0319f7b"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4518)
                        },
                        new
                        {
                            Id = new Guid("dec8d6a6-7028-41fe-a075-af1d9be343cd"),
                            ActionId = new Guid("b789df21-37e0-42f2-b4e4-f17540b50c2c"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4520),
                            IsActive = true,
                            ModuleId = new Guid("f493c1c3-917d-49fd-914d-42d3f0319f7b"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4521)
                        },
                        new
                        {
                            Id = new Guid("dfa4d63e-b728-4a90-adfa-af3ad4efffeb"),
                            ActionId = new Guid("56b186d3-1f07-4598-ae23-712b1a5b9fe2"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4522),
                            IsActive = true,
                            ModuleId = new Guid("1b7bf363-2a53-4771-92e7-27036d403473"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4523)
                        },
                        new
                        {
                            Id = new Guid("f2a91eeb-d46e-49bb-8baa-12b913a46d96"),
                            ActionId = new Guid("63c4e40e-bb10-469a-83a5-0111e6bae0be"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4524),
                            IsActive = true,
                            ModuleId = new Guid("1b7bf363-2a53-4771-92e7-27036d403473"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4524)
                        },
                        new
                        {
                            Id = new Guid("325840f6-bb88-4369-9085-31e29e93467f"),
                            ActionId = new Guid("1a4f35f1-cceb-4aa9-b448-5ed823df4a9d"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4525),
                            IsActive = true,
                            ModuleId = new Guid("1b7bf363-2a53-4771-92e7-27036d403473"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4526)
                        },
                        new
                        {
                            Id = new Guid("71928e63-9f4c-45dc-8ebf-94ce99efba04"),
                            ActionId = new Guid("aed8b54e-4cc3-4dd6-b68a-1bfd39fca1fd"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4527),
                            IsActive = true,
                            ModuleId = new Guid("1b7bf363-2a53-4771-92e7-27036d403473"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4527)
                        },
                        new
                        {
                            Id = new Guid("aebf73a1-7403-451c-804c-e7294b4260fa"),
                            ActionId = new Guid("b789df21-37e0-42f2-b4e4-f17540b50c2c"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4530),
                            IsActive = true,
                            ModuleId = new Guid("1b7bf363-2a53-4771-92e7-27036d403473"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4530)
                        },
                        new
                        {
                            Id = new Guid("b26a486f-5869-4423-9e86-a6544e6e2e5f"),
                            ActionId = new Guid("56b186d3-1f07-4598-ae23-712b1a5b9fe2"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4531),
                            IsActive = true,
                            ModuleId = new Guid("ac11bc95-bf0a-4de8-9312-0b50ab30a4e9"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4532)
                        },
                        new
                        {
                            Id = new Guid("61cdd6d5-e1d2-44ab-9afa-4da446abcc2e"),
                            ActionId = new Guid("63c4e40e-bb10-469a-83a5-0111e6bae0be"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4533),
                            IsActive = true,
                            ModuleId = new Guid("ac11bc95-bf0a-4de8-9312-0b50ab30a4e9"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4534)
                        },
                        new
                        {
                            Id = new Guid("86745b24-d321-40e6-9bed-0dd1c36a75ed"),
                            ActionId = new Guid("1a4f35f1-cceb-4aa9-b448-5ed823df4a9d"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4536),
                            IsActive = true,
                            ModuleId = new Guid("ac11bc95-bf0a-4de8-9312-0b50ab30a4e9"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4536)
                        },
                        new
                        {
                            Id = new Guid("ae152cf3-029d-4f83-8aef-5f87ee7013ec"),
                            ActionId = new Guid("aed8b54e-4cc3-4dd6-b68a-1bfd39fca1fd"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4538),
                            IsActive = true,
                            ModuleId = new Guid("ac11bc95-bf0a-4de8-9312-0b50ab30a4e9"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4538)
                        },
                        new
                        {
                            Id = new Guid("f160cf3c-2953-4553-9253-a8743c4a1114"),
                            ActionId = new Guid("b789df21-37e0-42f2-b4e4-f17540b50c2c"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4539),
                            IsActive = true,
                            ModuleId = new Guid("ac11bc95-bf0a-4de8-9312-0b50ab30a4e9"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4539)
                        });
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModuleActionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ModuleActionId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4438bef7-348e-4932-af23-7bff6cbd961a"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4638),
                            IsActive = true,
                            ModuleActionId = new Guid("64ebfe08-a224-4b87-9a7e-17c7fe2fe4e0"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4639)
                        },
                        new
                        {
                            Id = new Guid("c602c18e-78ca-4e29-81ca-ede548ee8eb0"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4642),
                            IsActive = true,
                            ModuleActionId = new Guid("ecd654b4-0a2e-45da-896d-610da6fcc5cc"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4642)
                        },
                        new
                        {
                            Id = new Guid("32d70498-4c33-4fe1-8dae-f78f442b7e9d"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4644),
                            IsActive = true,
                            ModuleActionId = new Guid("34362d85-5f3c-411e-a39e-12c13bbfec83"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4644)
                        },
                        new
                        {
                            Id = new Guid("a88d7172-2f76-43f7-aae4-6a1f68a386a1"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4648),
                            IsActive = true,
                            ModuleActionId = new Guid("ddbb18d7-0a32-45cb-9a5c-5c0cb820296d"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4648)
                        },
                        new
                        {
                            Id = new Guid("9073e03a-cd4d-47e6-9641-08c7c87ead70"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4650),
                            IsActive = true,
                            ModuleActionId = new Guid("6aa109d1-8daf-4820-aace-d0681312496b"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4650)
                        },
                        new
                        {
                            Id = new Guid("675eda32-05a8-48f3-911c-9756bf7e26f0"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4651),
                            IsActive = true,
                            ModuleActionId = new Guid("4fa09d33-f495-4ebc-9816-6ef4c1a0a17c"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4652)
                        },
                        new
                        {
                            Id = new Guid("ed1129bf-ac04-405f-bd0a-92b1e27fd5b2"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4653),
                            IsActive = true,
                            ModuleActionId = new Guid("63618758-605f-4324-a00b-a88921a6c06c"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4780)
                        },
                        new
                        {
                            Id = new Guid("289c4f18-46d9-4636-9696-6e3114476ec4"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4787),
                            IsActive = true,
                            ModuleActionId = new Guid("7042ef50-5f78-4952-bac5-7731090f29dc"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4788)
                        },
                        new
                        {
                            Id = new Guid("267f00e9-655a-4082-97bd-fe572031ad77"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4789),
                            IsActive = true,
                            ModuleActionId = new Guid("abc47213-15f9-4803-916d-4df573367eca"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4790)
                        },
                        new
                        {
                            Id = new Guid("5ad051f6-05d9-40f6-bfa2-c3be514693d7"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4791),
                            IsActive = true,
                            ModuleActionId = new Guid("dec8d6a6-7028-41fe-a075-af1d9be343cd"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4792)
                        },
                        new
                        {
                            Id = new Guid("5529ea74-398c-4cdd-9e3d-087f23ac3267"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4793),
                            IsActive = true,
                            ModuleActionId = new Guid("dfa4d63e-b728-4a90-adfa-af3ad4efffeb"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4793)
                        },
                        new
                        {
                            Id = new Guid("2b5d3c10-8349-4f07-8e0d-c5787290d4a7"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4797),
                            IsActive = true,
                            ModuleActionId = new Guid("f2a91eeb-d46e-49bb-8baa-12b913a46d96"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4797)
                        },
                        new
                        {
                            Id = new Guid("e86a2c33-444d-4907-8bea-6dc79d00de77"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4799),
                            IsActive = true,
                            ModuleActionId = new Guid("325840f6-bb88-4369-9085-31e29e93467f"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4799)
                        },
                        new
                        {
                            Id = new Guid("e580f810-852b-44f3-b99e-cfe537b667af"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4800),
                            IsActive = true,
                            ModuleActionId = new Guid("71928e63-9f4c-45dc-8ebf-94ce99efba04"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4801)
                        },
                        new
                        {
                            Id = new Guid("4d79993d-f3c6-4fd1-b41a-894ae2a06ad6"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4802),
                            IsActive = true,
                            ModuleActionId = new Guid("aebf73a1-7403-451c-804c-e7294b4260fa"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4802)
                        },
                        new
                        {
                            Id = new Guid("53c37fdf-ae8d-45be-bb38-e93b6de9f834"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4804),
                            IsActive = true,
                            ModuleActionId = new Guid("b26a486f-5869-4423-9e86-a6544e6e2e5f"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4804)
                        },
                        new
                        {
                            Id = new Guid("e382a1b9-5c7c-4f58-a696-5af08b1f70af"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4805),
                            IsActive = true,
                            ModuleActionId = new Guid("61cdd6d5-e1d2-44ab-9afa-4da446abcc2e"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4805)
                        },
                        new
                        {
                            Id = new Guid("f6a4e475-a0fb-4d3a-bbbd-05da947c5c9e"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4807),
                            IsActive = true,
                            ModuleActionId = new Guid("86745b24-d321-40e6-9bed-0dd1c36a75ed"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4807)
                        },
                        new
                        {
                            Id = new Guid("a672fbf3-2173-45f2-9d6e-62869d4d7c3a"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4808),
                            IsActive = true,
                            ModuleActionId = new Guid("ae152cf3-029d-4f83-8aef-5f87ee7013ec"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4809)
                        },
                        new
                        {
                            Id = new Guid("229cb013-1037-4fe9-aacf-859fe6ade4da"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4812),
                            IsActive = true,
                            ModuleActionId = new Guid("f160cf3c-2953-4553-9253-a8743c4a1114"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4812)
                        });
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1e743715-89d9-4170-ad5b-7577040c23bc"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(3123),
                            IsActive = true,
                            Name = "Admin",
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(3126)
                        },
                        new
                        {
                            Id = new Guid("2246f905-b946-4e69-8a0f-e7c0d34408a2"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(3128),
                            IsActive = true,
                            Name = "User",
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(3129)
                        });
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.RolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cc34b818-bbff-4997-b3c4-d26e2f874ffb"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4967),
                            IsActive = true,
                            PermissionId = new Guid("4438bef7-348e-4932-af23-7bff6cbd961a"),
                            RoleId = new Guid("1e743715-89d9-4170-ad5b-7577040c23bc"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(4967)
                        },
                        new
                        {
                            Id = new Guid("7c7ecafa-68df-41c0-9623-3e44817293f5"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5006),
                            IsActive = true,
                            PermissionId = new Guid("c602c18e-78ca-4e29-81ca-ede548ee8eb0"),
                            RoleId = new Guid("1e743715-89d9-4170-ad5b-7577040c23bc"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5007)
                        },
                        new
                        {
                            Id = new Guid("a67dfbec-47d3-43a5-8ab1-d47b1c8cbe7e"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5015),
                            IsActive = true,
                            PermissionId = new Guid("32d70498-4c33-4fe1-8dae-f78f442b7e9d"),
                            RoleId = new Guid("1e743715-89d9-4170-ad5b-7577040c23bc"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5016)
                        },
                        new
                        {
                            Id = new Guid("ebb97300-c246-4758-bc6e-1a1e36112520"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5022),
                            IsActive = true,
                            PermissionId = new Guid("a88d7172-2f76-43f7-aae4-6a1f68a386a1"),
                            RoleId = new Guid("1e743715-89d9-4170-ad5b-7577040c23bc"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5023)
                        },
                        new
                        {
                            Id = new Guid("ac47feb7-847c-4d00-b2e9-22b26a81aec7"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5029),
                            IsActive = true,
                            PermissionId = new Guid("9073e03a-cd4d-47e6-9641-08c7c87ead70"),
                            RoleId = new Guid("1e743715-89d9-4170-ad5b-7577040c23bc"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5029)
                        },
                        new
                        {
                            Id = new Guid("640e2e75-b497-459a-9bf1-303a2412bac0"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5040),
                            IsActive = true,
                            PermissionId = new Guid("9073e03a-cd4d-47e6-9641-08c7c87ead70"),
                            RoleId = new Guid("2246f905-b946-4e69-8a0f-e7c0d34408a2"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5040)
                        },
                        new
                        {
                            Id = new Guid("2f0f7487-2b00-4e21-8de8-76dfbb773550"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5044),
                            IsActive = true,
                            PermissionId = new Guid("675eda32-05a8-48f3-911c-9756bf7e26f0"),
                            RoleId = new Guid("1e743715-89d9-4170-ad5b-7577040c23bc"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5044)
                        },
                        new
                        {
                            Id = new Guid("c6f3cee1-2904-4973-babc-58de59d1f19a"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5063),
                            IsActive = true,
                            PermissionId = new Guid("675eda32-05a8-48f3-911c-9756bf7e26f0"),
                            RoleId = new Guid("2246f905-b946-4e69-8a0f-e7c0d34408a2"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5063)
                        },
                        new
                        {
                            Id = new Guid("23a94642-64f2-4bc0-89e4-a1d4c39be7c4"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5066),
                            IsActive = true,
                            PermissionId = new Guid("ed1129bf-ac04-405f-bd0a-92b1e27fd5b2"),
                            RoleId = new Guid("1e743715-89d9-4170-ad5b-7577040c23bc"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5067)
                        },
                        new
                        {
                            Id = new Guid("334188d7-9630-4aa0-9ad8-2688a1ec44cb"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5078),
                            IsActive = true,
                            PermissionId = new Guid("ed1129bf-ac04-405f-bd0a-92b1e27fd5b2"),
                            RoleId = new Guid("2246f905-b946-4e69-8a0f-e7c0d34408a2"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5078)
                        },
                        new
                        {
                            Id = new Guid("7c45415a-b18e-4d84-91bc-bbf37c7265eb"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5080),
                            IsActive = true,
                            PermissionId = new Guid("289c4f18-46d9-4636-9696-6e3114476ec4"),
                            RoleId = new Guid("1e743715-89d9-4170-ad5b-7577040c23bc"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5081)
                        },
                        new
                        {
                            Id = new Guid("bfbabe3f-f56a-453d-9fd6-e4de77cbb133"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5088),
                            IsActive = true,
                            PermissionId = new Guid("289c4f18-46d9-4636-9696-6e3114476ec4"),
                            RoleId = new Guid("2246f905-b946-4e69-8a0f-e7c0d34408a2"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5089)
                        },
                        new
                        {
                            Id = new Guid("f8506076-b4bc-49e9-b046-d7720b82c8e5"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5091),
                            IsActive = true,
                            PermissionId = new Guid("267f00e9-655a-4082-97bd-fe572031ad77"),
                            RoleId = new Guid("1e743715-89d9-4170-ad5b-7577040c23bc"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5091)
                        },
                        new
                        {
                            Id = new Guid("211691c6-38d7-4184-9732-b510b5aa6f10"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5100),
                            IsActive = true,
                            PermissionId = new Guid("5ad051f6-05d9-40f6-bfa2-c3be514693d7"),
                            RoleId = new Guid("1e743715-89d9-4170-ad5b-7577040c23bc"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5100)
                        },
                        new
                        {
                            Id = new Guid("7eb9179a-aa57-43f0-9932-f7222eaf0139"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5109),
                            IsActive = true,
                            PermissionId = new Guid("5ad051f6-05d9-40f6-bfa2-c3be514693d7"),
                            RoleId = new Guid("2246f905-b946-4e69-8a0f-e7c0d34408a2"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5109)
                        },
                        new
                        {
                            Id = new Guid("50d948e4-574c-4e85-b64c-65ba109dbb2e"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5113),
                            IsActive = true,
                            PermissionId = new Guid("5529ea74-398c-4cdd-9e3d-087f23ac3267"),
                            RoleId = new Guid("1e743715-89d9-4170-ad5b-7577040c23bc"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5113)
                        },
                        new
                        {
                            Id = new Guid("442a4ffc-1ece-4cb0-a866-bfbe2182380a"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5121),
                            IsActive = true,
                            PermissionId = new Guid("5529ea74-398c-4cdd-9e3d-087f23ac3267"),
                            RoleId = new Guid("2246f905-b946-4e69-8a0f-e7c0d34408a2"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5122)
                        },
                        new
                        {
                            Id = new Guid("4a94560b-d848-42db-b8ea-f1d9f260ef18"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5125),
                            IsActive = true,
                            PermissionId = new Guid("2b5d3c10-8349-4f07-8e0d-c5787290d4a7"),
                            RoleId = new Guid("1e743715-89d9-4170-ad5b-7577040c23bc"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5126)
                        },
                        new
                        {
                            Id = new Guid("438bfa1e-d95d-4ab5-8db5-bd496cbc754b"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5134),
                            IsActive = true,
                            PermissionId = new Guid("2b5d3c10-8349-4f07-8e0d-c5787290d4a7"),
                            RoleId = new Guid("2246f905-b946-4e69-8a0f-e7c0d34408a2"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5134)
                        },
                        new
                        {
                            Id = new Guid("75172e58-9ff4-4fc6-8cb7-262d2046e05c"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5137),
                            IsActive = true,
                            PermissionId = new Guid("e86a2c33-444d-4907-8bea-6dc79d00de77"),
                            RoleId = new Guid("1e743715-89d9-4170-ad5b-7577040c23bc"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5137)
                        },
                        new
                        {
                            Id = new Guid("94c24d5e-9b15-4f49-b110-d5b0f39f843f"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5145),
                            IsActive = true,
                            PermissionId = new Guid("e86a2c33-444d-4907-8bea-6dc79d00de77"),
                            RoleId = new Guid("2246f905-b946-4e69-8a0f-e7c0d34408a2"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5146)
                        },
                        new
                        {
                            Id = new Guid("065ba2f4-4d21-4741-bc90-5f4dd22aa5da"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5148),
                            IsActive = true,
                            PermissionId = new Guid("e580f810-852b-44f3-b99e-cfe537b667af"),
                            RoleId = new Guid("1e743715-89d9-4170-ad5b-7577040c23bc"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5148)
                        },
                        new
                        {
                            Id = new Guid("56c723e2-47f9-4364-807a-df7b43908f3b"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5220),
                            IsActive = true,
                            PermissionId = new Guid("4d79993d-f3c6-4fd1-b41a-894ae2a06ad6"),
                            RoleId = new Guid("1e743715-89d9-4170-ad5b-7577040c23bc"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5221)
                        },
                        new
                        {
                            Id = new Guid("10748cdd-ed00-44fc-8961-8350382ccdfa"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5233),
                            IsActive = true,
                            PermissionId = new Guid("4d79993d-f3c6-4fd1-b41a-894ae2a06ad6"),
                            RoleId = new Guid("2246f905-b946-4e69-8a0f-e7c0d34408a2"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5233)
                        },
                        new
                        {
                            Id = new Guid("c2e422c3-b7f0-4875-b5ce-ed365bdf26b3"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5236),
                            IsActive = true,
                            PermissionId = new Guid("53c37fdf-ae8d-45be-bb38-e93b6de9f834"),
                            RoleId = new Guid("1e743715-89d9-4170-ad5b-7577040c23bc"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5236)
                        },
                        new
                        {
                            Id = new Guid("0129b08e-945b-41c0-b391-c4a9de652bd9"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5246),
                            IsActive = true,
                            PermissionId = new Guid("e382a1b9-5c7c-4f58-a696-5af08b1f70af"),
                            RoleId = new Guid("1e743715-89d9-4170-ad5b-7577040c23bc"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5247)
                        },
                        new
                        {
                            Id = new Guid("f28fbfe2-b014-4540-9c36-95f1848ed66f"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5257),
                            IsActive = true,
                            PermissionId = new Guid("f6a4e475-a0fb-4d3a-bbbd-05da947c5c9e"),
                            RoleId = new Guid("1e743715-89d9-4170-ad5b-7577040c23bc"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5257)
                        },
                        new
                        {
                            Id = new Guid("10b08153-20b0-4d02-bac1-6d497e6e51eb"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5267),
                            IsActive = true,
                            PermissionId = new Guid("a672fbf3-2173-45f2-9d6e-62869d4d7c3a"),
                            RoleId = new Guid("1e743715-89d9-4170-ad5b-7577040c23bc"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5267)
                        },
                        new
                        {
                            Id = new Guid("eca592ba-c9bb-45db-941f-c9be36efda68"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5277),
                            IsActive = true,
                            PermissionId = new Guid("229cb013-1037-4fe9-aacf-859fe6ade4da"),
                            RoleId = new Guid("1e743715-89d9-4170-ad5b-7577040c23bc"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5277)
                        },
                        new
                        {
                            Id = new Guid("942679eb-b801-4d70-969c-64074471e3c5"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5294),
                            IsActive = true,
                            PermissionId = new Guid("229cb013-1037-4fe9-aacf-859fe6ade4da"),
                            RoleId = new Guid("2246f905-b946-4e69-8a0f-e7c0d34408a2"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(5294)
                        });
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec94bf46-2537-4514-8791-5a2a95b1fcea"),
                            CreatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(3324),
                            DateOfBirth = new DateTime(2000, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alvaroku123@gmail.com",
                            IsActive = true,
                            Name = "Alvaro Kú",
                            PasswordHash = "b2867617492e26c338ab49f72afabc984d798b59755a27e312b953716ae964d7",
                            PhoneNumber = "9919596720",
                            RoleId = new Guid("1e743715-89d9-4170-ad5b-7577040c23bc"),
                            UpdatedAt = new DateTime(2024, 9, 23, 17, 53, 51, 487, DateTimeKind.Utc).AddTicks(3324)
                        });
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.UserFriend", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FriendId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "FriendId");

                    b.HasIndex("FriendId");

                    b.ToTable("UserFriends");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Album", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.AlbumUser", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Album", "Album")
                        .WithMany("AlbumUsers")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedMomentsBackend.App.Models.Entities.User", "User")
                        .WithMany("AlbumUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Moment", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Album", "Album")
                        .WithMany("Moments")
                        .HasForeignKey("AlbumId");

                    b.HasOne("SharedMomentsBackend.App.Models.Entities.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.MomentResource", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Moment", "Moment")
                        .WithMany("MomentResources")
                        .HasForeignKey("MomentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Resource", "Resource")
                        .WithMany("MomentResources")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moment");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.MomentUser", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Moment", "Moment")
                        .WithMany("MomentUsers")
                        .HasForeignKey("MomentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedMomentsBackend.App.Models.Entities.User", "User")
                        .WithMany("MomentUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.ModuleAction", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Security.Action", "Action")
                        .WithMany("ModuleActions")
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Security.Module", "Module")
                        .WithMany("ModuleActions")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Permission", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Security.ModuleAction", "ModuleAction")
                        .WithMany()
                        .HasForeignKey("ModuleActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModuleAction");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.RolePermission", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Security.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Security.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.User", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Resource", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");

                    b.HasOne("SharedMomentsBackend.App.Models.Entities.Security.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.UserFriend", b =>
                {
                    b.HasOne("SharedMomentsBackend.App.Models.Entities.User", "Friend")
                        .WithMany()
                        .HasForeignKey("FriendId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SharedMomentsBackend.App.Models.Entities.User", "User")
                        .WithMany("UserFriends")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Friend");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Album", b =>
                {
                    b.Navigation("AlbumUsers");

                    b.Navigation("Moments");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Moment", b =>
                {
                    b.Navigation("MomentResources");

                    b.Navigation("MomentUsers");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Resource", b =>
                {
                    b.Navigation("MomentResources");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Action", b =>
                {
                    b.Navigation("ModuleActions");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Module", b =>
                {
                    b.Navigation("ModuleActions");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.Security.Role", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("SharedMomentsBackend.App.Models.Entities.User", b =>
                {
                    b.Navigation("AlbumUsers");

                    b.Navigation("MomentUsers");

                    b.Navigation("UserFriends");
                });
#pragma warning restore 612, 618
        }
    }
}
